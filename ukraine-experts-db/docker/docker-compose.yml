version: '3.8'

services:
  postgres:
    container_name: ukraine_experts_db
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ukraine_experts
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    networks:
      - ukraine_experts_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d ukraine_experts"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: ukraine_experts_pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "False"
      PGADMIN_CONFIG_LOGIN_BANNER: "\"Ukraine Experts Database\""
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - ukraine_experts_network

  api:
    container_name: ukraine_experts_api
    build:
      context: ..
      dockerfile: src/Dockerfile
    restart: always
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=admin
      - DB_PASSWORD=password
      - DB_NAME=ukraine_experts
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ukraine_experts_network

networks:
  ukraine_experts_network:
    driver: bridge

volumes:
  postgres_data: 